#version 440													
out vec4 color;													
																
in vec4 vertexColor;
in vec2 TexCoord;

// uniform vec4 u_Color;	

struct DirectionalLight 
{
	vec3 color;
	float ambientIntensity;
};

uniform sampler2D theTexture;

uniform DirectionalLight directionalLight;							
																
void main()														
{	
	vec4 ambientColor = vec4(directionalLight.color, 1.0f) * directionalLight.ambientIntensity;
	// color = u_Color;                                         
	// color = vertexColor;
	// Multipliziert mit vertexColor sorgt f√ºr ein farbiges Bild!
	// color = texture(theTexture, TexCoord) * vertexColor;
	
	color = texture(theTexture, TexCoord) * ambientColor;
}